// Code generated by MockGen. DO NOT EDIT.
// Source: workload_client.go

// Package workloadclient is a generated GoMock package.
package workloadclient

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	client "sigs.k8s.io/controller-runtime/pkg/client"
)

// MockClientGenerator is a mock of ClientGenerator interface.
type MockClientGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockClientGeneratorMockRecorder
}

// MockClientGeneratorMockRecorder is the mock recorder for MockClientGenerator.
type MockClientGeneratorMockRecorder struct {
	mock *MockClientGenerator
}

// NewMockClientGenerator creates a new mock instance.
func NewMockClientGenerator(ctrl *gomock.Controller) *MockClientGenerator {
	mock := &MockClientGenerator{ctrl: ctrl}
	mock.recorder = &MockClientGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientGenerator) EXPECT() *MockClientGeneratorMockRecorder {
	return m.recorder
}

// GetWorkloadClusterClient mocks base method.
func (m *MockClientGenerator) GetWorkloadClusterClient(kubeconfig []byte) (client.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWorkloadClusterClient", kubeconfig)
	ret0, _ := ret[0].(client.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWorkloadClusterClient indicates an expected call of GetWorkloadClusterClient.
func (mr *MockClientGeneratorMockRecorder) GetWorkloadClusterClient(kubeconfig interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWorkloadClusterClient", reflect.TypeOf((*MockClientGenerator)(nil).GetWorkloadClusterClient), kubeconfig)
}
